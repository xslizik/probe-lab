==> kali: Importing base box 'munikypo/kali'...
==> kali: Matching MAC address for NAT networking...
==> kali: Checking if box 'munikypo/kali' version '0.3.0' is up to date...
==> kali: Setting the name of the VM: probe-lab-kali-20241020171654
==> kali: Clearing any previously set network interfaces...
==> kali: Preparing network interfaces based on configuration...
    kali: Adapter 1: nat
    kali: Adapter 2: bridged
==> kali: Forwarding ports...
    kali: 22 (guest) => 2222 (host) (adapter 1)
==> kali: Configuring storage mediums...
    kali: Disk 'vagrant_primary' needs to be resized. Resizing disk...
==> kali: Running 'pre-boot' VM customizations...
==> kali: Booting VM...
==> kali: Waiting for machine to boot. This may take a few minutes...
    kali: SSH address: 127.0.0.1:2222
    kali: SSH username: vagrant
    kali: SSH auth method: private key
    kali: 
    kali: Vagrant insecure key detected. Vagrant will automatically replace
    kali: this with a newly generated keypair for better security.
    kali: 
    kali: Inserting generated public key within guest...
    kali: Removing insecure key from the guest if it's present...
    kali: Key inserted! Disconnecting and reconnecting using new SSH key...
==> kali: Machine booted and ready!
==> kali: Checking for guest additions in VM...
    kali: The guest additions on this VM do not match the installed version of
    kali: VirtualBox! In most cases this is fine, but in rare cases it can
    kali: prevent things such as shared folders from working properly. If you see
    kali: shared folder errors, please make sure the guest additions within the
    kali: virtual machine match the version of VirtualBox you have installed on
    kali: your host and reload your VM.
    kali: 
    kali: Guest Additions Version: 6.1.48
    kali: VirtualBox Version: 7.0
==> kali: Setting hostname...
==> kali: Configuring and enabling network interfaces...
==> kali: Rsyncing folder: /home/kono/Desktop/xd/ => /vagrant
==> kali:   - Exclude: [".vagrant/", ".git/"]
==> kali: Running provisioner: ansible_local...
    kali: Running ansible-galaxy...
Starting galaxy role install process
- downloading role 'apache', owned by geerlingguy
- downloading role from https://github.com/geerlingguy/ansible-role-apache/archive/4.0.0.tar.gz
- extracting geerlingguy.apache to /vagrant/provisioning/roles/geerlingguy.apache
- geerlingguy.apache (4.0.0) was installed successfully
- downloading role 'mysql', owned by geerlingguy
- downloading role from https://github.com/geerlingguy/ansible-role-mysql/archive/4.3.4.tar.gz
- extracting geerlingguy.mysql to /vagrant/provisioning/roles/geerlingguy.mysql
- geerlingguy.mysql (4.3.4) was installed successfully
    kali: Running ansible-playbook...

PLAY [Setup Web Server] ********************************************************
skipping: no hosts matched

PLAY [Setup File Server] *******************************************************
skipping: no hosts matched

PLAY [Setup Telnet/SNMP Server] ************************************************
skipping: no hosts matched

PLAY [Enable UFW and setup Routing] ********************************************
skipping: no hosts matched

PLAY [Execute kali role] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [kali]

TASK [kali : Restart networking] ***********************************************
changed: [kali]

TASK [kali : Update apt cache] *************************************************
changed: [kali]

TASK [kali : Install cloud-guest-utils] ****************************************
changed: [kali]

TASK [kali : Expand partition using growpart] **********************************
changed: [kali]

TASK [kali : Resize the filesystem on /dev/sda1] *******************************
changed: [kali]

TASK [kali : Install Zmap] *****************************************************
changed: [kali]

TASK [kali : Clear contents of existing Zmap configuration file] ***************
changed: [kali]

TASK [kali : Copy nscan to /opt and make it executable] ************************
changed: [kali]

TASK [kali : Copy test.sh to /opt and make it executable] **********************
changed: [kali]

TASK [kali : Copy pipeline.sh to /opt and make it executable] ******************
changed: [kali]

TASK [kali : Install Docker] ***************************************************
changed: [kali]

TASK [kali : Add user kali to the docker group] ********************************
changed: [kali]

TASK [kali : Ensure Docker service is started and enabled] *********************
ok: [kali]

TASK [kali : Ensure /tmp/webmap directory exists] ******************************
changed: [kali]

TASK [kali : ansible.builtin.include_tasks] ************************************
skipping: [kali]

PLAY [Release and renew DHCP lease for eth1] ***********************************

TASK [Gathering Facts] *********************************************************
ok: [kali]

TASK [networking : Release DHCP lease on eth1] *********************************
changed: [kali]

TASK [networking : Renew DHCP lease on eth1] ***********************************
changed: [kali]

TASK [networking : Release DHCP lease on eth1 (again)] *************************
changed: [kali]

TASK [networking : Renew DHCP lease on eth1 (again)] ***************************
changed: [kali]

PLAY RECAP *********************************************************************
kali                       : ok=20   changed=17   unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   

==> server0: Importing base box 'generic/debian12'...
==> server0: Matching MAC address for NAT networking...
==> server0: Checking if box 'generic/debian12' version '4.3.12' is up to date...
==> server0: Setting the name of the VM: probe-lab-server0-20241020171654
==> server0: Fixed port collision for 22 => 2222. Now on port 2200.
==> server0: Clearing any previously set network interfaces...
==> server0: Preparing network interfaces based on configuration...
    server0: Adapter 1: nat
    server0: Adapter 2: bridged
==> server0: Forwarding ports...
    server0: 22 (guest) => 2200 (host) (adapter 1)
==> server0: Running 'pre-boot' VM customizations...
==> server0: Booting VM...
==> server0: Waiting for machine to boot. This may take a few minutes...
    server0: SSH address: 127.0.0.1:2200
    server0: SSH username: vagrant
    server0: SSH auth method: private key
    server0: Warning: Connection reset. Retrying...
    server0: Warning: Remote connection disconnect. Retrying...
    server0: 
    server0: Vagrant insecure key detected. Vagrant will automatically replace
    server0: this with a newly generated keypair for better security.
    server0: 
    server0: Inserting generated public key within guest...
    server0: Removing insecure key from the guest if it's present...
    server0: Key inserted! Disconnecting and reconnecting using new SSH key...
==> server0: Machine booted and ready!
==> server0: Checking for guest additions in VM...
==> server0: Setting hostname...
==> server0: Configuring and enabling network interfaces...
==> server0: Rsyncing folder: /home/kono/Desktop/xd/ => /vagrant
==> server0:   - Exclude: [".vagrant/", ".git/"]
==> server0: Running provisioner: ansible_local...
    server0: Installing Ansible...
    server0: Running ansible-galaxy...
Starting galaxy role install process
- downloading role 'apache', owned by geerlingguy
- downloading role from https://github.com/geerlingguy/ansible-role-apache/archive/4.0.0.tar.gz
- extracting geerlingguy.apache to /vagrant/provisioning/roles/geerlingguy.apache
- geerlingguy.apache (4.0.0) was installed successfully
- downloading role 'mysql', owned by geerlingguy
- downloading role from https://github.com/geerlingguy/ansible-role-mysql/archive/4.3.4.tar.gz
- extracting geerlingguy.mysql to /vagrant/provisioning/roles/geerlingguy.mysql
- geerlingguy.mysql (4.3.4) was installed successfully
    server0: Running ansible-playbook...

PLAY [Setup Web Server] ********************************************************

TASK [Gathering Facts] *********************************************************
ok: [server0]

TASK [geerlingguy.apache : Include OS-specific variables.] *********************
ok: [server0]

TASK [geerlingguy.apache : Include variables for Amazon Linux.] ****************
skipping: [server0]

TASK [geerlingguy.apache : Define apache_packages.] ****************************
ok: [server0]

TASK [geerlingguy.apache : include_tasks] **************************************
included: /vagrant/provisioning/roles/geerlingguy.apache/tasks/setup-Debian.yml for server0

TASK [geerlingguy.apache : Update apt cache.] **********************************
ok: [server0]

TASK [geerlingguy.apache : Ensure Apache is installed on Debian.] **************
changed: [server0]

TASK [geerlingguy.apache : Get installed version of Apache.] *******************
ok: [server0]

TASK [geerlingguy.apache : Create apache_version variable.] ********************
ok: [server0]

TASK [geerlingguy.apache : Include Apache 2.2 variables.] **********************
skipping: [server0]

TASK [geerlingguy.apache : Include Apache 2.4 variables.] **********************
ok: [server0]

TASK [geerlingguy.apache : Configure Apache.] **********************************
included: /vagrant/provisioning/roles/geerlingguy.apache/tasks/configure-Debian.yml for server0

TASK [geerlingguy.apache : Configure Apache.] **********************************
ok: [server0] => (item={'regexp': '^Listen ', 'line': 'Listen 80'})

TASK [geerlingguy.apache : Enable Apache mods.] ********************************
changed: [server0] => (item=ssl)

TASK [geerlingguy.apache : Disable Apache mods.] *******************************
skipping: [server0]

TASK [geerlingguy.apache : Check whether certificates defined in vhosts exist.] ***
skipping: [server0]

TASK [geerlingguy.apache : Add apache vhosts configuration.] *******************
changed: [server0]

TASK [geerlingguy.apache : Add vhost symlink in sites-enabled.] ****************
changed: [server0]

TASK [geerlingguy.apache : Remove default vhost in sites-enabled.] *************
skipping: [server0]

TASK [geerlingguy.apache : Ensure Apache has selected state and enabled on boot.] ***
ok: [server0]

TASK [geerlingguy.mysql : ansible.builtin.include_tasks] ***********************
included: /vagrant/provisioning/roles/geerlingguy.mysql/tasks/variables.yml for server0

TASK [geerlingguy.mysql : Include OS-specific variables.] **********************
ok: [server0] => (item=/vagrant/provisioning/roles/geerlingguy.mysql/vars/Debian-12.yml)

TASK [geerlingguy.mysql : Define mysql_packages.] ******************************
ok: [server0]

TASK [geerlingguy.mysql : Define mysql_daemon.] ********************************
ok: [server0]

TASK [geerlingguy.mysql : Define mysql_slow_query_log_file.] *******************
ok: [server0]

TASK [geerlingguy.mysql : Define mysql_log_error.] *****************************
ok: [server0]

TASK [geerlingguy.mysql : Define mysql_syslog_tag.] ****************************
ok: [server0]

TASK [geerlingguy.mysql : Define mysql_pid_file.] ******************************
ok: [server0]

TASK [geerlingguy.mysql : Define mysql_config_file.] ***************************
ok: [server0]

TASK [geerlingguy.mysql : Define mysql_config_include_dir.] ********************
ok: [server0]

TASK [geerlingguy.mysql : Define mysql_socket.] ********************************
ok: [server0]

TASK [geerlingguy.mysql : Define mysql_supports_innodb_large_prefix.] **********
ok: [server0]

TASK [geerlingguy.mysql : ansible.builtin.include_tasks] ***********************
skipping: [server0]

TASK [geerlingguy.mysql : ansible.builtin.include_tasks] ***********************
included: /vagrant/provisioning/roles/geerlingguy.mysql/tasks/setup-Debian.yml for server0

TASK [geerlingguy.mysql : Check if MySQL is already installed.] ****************
ok: [server0]

TASK [geerlingguy.mysql : Update apt cache if MySQL is not yet installed.] *****
ok: [server0]

TASK [geerlingguy.mysql : Ensure MySQL Python libraries are installed.] ********
changed: [server0]

TASK [geerlingguy.mysql : Ensure MySQL packages are installed.] ****************
changed: [server0]

TASK [geerlingguy.mysql : Ensure MySQL is stopped after initial install.] ******
ok: [server0]

TASK [geerlingguy.mysql : Delete innodb log files created by apt package after initial install.] ***
skipping: [server0] => (item=ib_logfile0) 
skipping: [server0] => (item=ib_logfile1) 
skipping: [server0]

TASK [geerlingguy.mysql : ansible.builtin.include_tasks] ***********************
skipping: [server0]

TASK [geerlingguy.mysql : Check if MySQL packages were installed.] *************
ok: [server0]

TASK [geerlingguy.mysql : ansible.builtin.include_tasks] ***********************
included: /vagrant/provisioning/roles/geerlingguy.mysql/tasks/configure.yml for server0

TASK [geerlingguy.mysql : Get MySQL version.] **********************************
ok: [server0]

TASK [geerlingguy.mysql : Copy my.cnf global MySQL configuration.] *************
changed: [server0]

TASK [geerlingguy.mysql : Verify mysql include directory exists.] **************
skipping: [server0]

TASK [geerlingguy.mysql : Copy my.cnf override files into include directory.] ***
skipping: [server0]

TASK [geerlingguy.mysql : Create slow query log file (if configured).] *********
skipping: [server0]

TASK [geerlingguy.mysql : Create datadir if it does not exist] *****************
ok: [server0]

TASK [geerlingguy.mysql : Set ownership on slow query log file (if configured).] ***
skipping: [server0]

TASK [geerlingguy.mysql : Create error log file (if configured).] **************
skipping: [server0]

TASK [geerlingguy.mysql : Set ownership on error log file (if configured).] ****
skipping: [server0]

TASK [geerlingguy.mysql : Ensure MySQL is started and enabled on boot.] ********
changed: [server0]

TASK [geerlingguy.mysql : ansible.builtin.include_tasks] ***********************
included: /vagrant/provisioning/roles/geerlingguy.mysql/tasks/secure-installation.yml for server0

TASK [geerlingguy.mysql : Ensure default user is present.] *********************
skipping: [server0]

TASK [geerlingguy.mysql : Copy user-my.cnf file with password credentials.] ****
skipping: [server0]

TASK [geerlingguy.mysql : Disallow root login remotely] ************************
ok: [server0] => (item=DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1'))

TASK [geerlingguy.mysql : Get list of hosts for the root user.] ****************
ok: [server0]

TASK [geerlingguy.mysql : Update MySQL root password for localhost root account (5.7.x).] ***
skipping: [server0] => (item=localhost) 
skipping: [server0]

TASK [geerlingguy.mysql : Update MySQL root password for localhost root account (< 5.7.x).] ***
changed: [server0] => (item=localhost)

TASK [geerlingguy.mysql : Copy .my.cnf file with root password credentials.] ***
changed: [server0]

TASK [geerlingguy.mysql : Get list of hosts for the anonymous user.] ***********
ok: [server0]

TASK [geerlingguy.mysql : Remove anonymous MySQL users.] ***********************
skipping: [server0]

TASK [geerlingguy.mysql : Remove MySQL test database.] *************************
ok: [server0]

TASK [geerlingguy.mysql : ansible.builtin.include_tasks] ***********************
included: /vagrant/provisioning/roles/geerlingguy.mysql/tasks/databases.yml for server0

TASK [geerlingguy.mysql : Ensure MySQL databases are present.] *****************
skipping: [server0]

TASK [geerlingguy.mysql : ansible.builtin.include_tasks] ***********************
included: /vagrant/provisioning/roles/geerlingguy.mysql/tasks/users.yml for server0

TASK [geerlingguy.mysql : Ensure MySQL users are present.] *********************
skipping: [server0]

TASK [geerlingguy.mysql : ansible.builtin.include_tasks] ***********************
included: /vagrant/provisioning/roles/geerlingguy.mysql/tasks/replication.yml for server0

TASK [geerlingguy.mysql : Ensure replication user exists on master.] ***********
skipping: [server0]

TASK [geerlingguy.mysql : Check slave replication status.] *********************
skipping: [server0]

TASK [geerlingguy.mysql : Check master replication status.] ********************
skipping: [server0]

TASK [geerlingguy.mysql : Configure replication on the slave.] *****************
skipping: [server0]

TASK [geerlingguy.mysql : Start replication.] **********************************
skipping: [server0]

TASK [smtp-stop : Disable and stop Postfix service] ****************************
changed: [server0]

RUNNING HANDLER [geerlingguy.apache : restart apache] **************************
changed: [server0]

RUNNING HANDLER [geerlingguy.mysql : restart mysql] ****************************
[WARNING]: Ignoring "sleep" as it is not used in "systemd"
changed: [server0]

PLAY [Setup File Server] *******************************************************
skipping: no hosts matched

PLAY [Setup Telnet/SNMP Server] ************************************************
skipping: no hosts matched

PLAY [Enable UFW and setup Routing] ********************************************

TASK [Gathering Facts] *********************************************************
ok: [server0]

TASK [ufw : Install UFW] *******************************************************
changed: [server0]

TASK [ufw : Enable specified ports in UFW] *************************************
changed: [server0] => (item=22)
changed: [server0] => (item=80)
changed: [server0] => (item=443)
changed: [server0] => (item=3306)

TASK [ufw : Enable UFW] ********************************************************
changed: [server0]

TASK [ufw : Ensure UFW is enabled on boot] *************************************
ok: [server0]

PLAY [Execute kali role] *******************************************************
skipping: no hosts matched

PLAY [Release and renew DHCP lease for eth1] ***********************************

TASK [Gathering Facts] *********************************************************
ok: [server0]

TASK [networking : Release DHCP lease on eth1] *********************************
changed: [server0]

TASK [networking : Renew DHCP lease on eth1] ***********************************
changed: [server0]

TASK [networking : Release DHCP lease on eth1 (again)] *************************
changed: [server0]

TASK [networking : Renew DHCP lease on eth1 (again)] ***************************
changed: [server0]

PLAY RECAP *********************************************************************
server0                    : ok=62   changed=20   unreachable=0    failed=0    skipped=25   rescued=0    ignored=0   

==> server1: Importing base box 'generic/debian12'...
==> server1: Matching MAC address for NAT networking...
==> server1: Checking if box 'generic/debian12' version '4.3.12' is up to date...
==> server1: Setting the name of the VM: probe-lab-server1-20241020171654
==> server1: Fixed port collision for 22 => 2222. Now on port 2201.
==> server1: Clearing any previously set network interfaces...
==> server1: Preparing network interfaces based on configuration...
    server1: Adapter 1: nat
    server1: Adapter 2: bridged
==> server1: Forwarding ports...
    server1: 22 (guest) => 2201 (host) (adapter 1)
==> server1: Running 'pre-boot' VM customizations...
==> server1: Booting VM...
==> server1: Waiting for machine to boot. This may take a few minutes...
    server1: SSH address: 127.0.0.1:2201
    server1: SSH username: vagrant
    server1: SSH auth method: private key
    server1: Warning: Connection reset. Retrying...
    server1: Warning: Remote connection disconnect. Retrying...
    server1: 
    server1: Vagrant insecure key detected. Vagrant will automatically replace
    server1: this with a newly generated keypair for better security.
    server1: 
    server1: Inserting generated public key within guest...
    server1: Removing insecure key from the guest if it's present...
    server1: Key inserted! Disconnecting and reconnecting using new SSH key...
==> server1: Machine booted and ready!
==> server1: Checking for guest additions in VM...
==> server1: Setting hostname...
==> server1: Configuring and enabling network interfaces...
==> server1: Rsyncing folder: /home/kono/Desktop/xd/ => /vagrant
==> server1:   - Exclude: [".vagrant/", ".git/"]
==> server1: Running provisioner: ansible_local...
    server1: Installing Ansible...
    server1: Running ansible-galaxy...
Starting galaxy role install process
- downloading role 'apache', owned by geerlingguy
- downloading role from https://github.com/geerlingguy/ansible-role-apache/archive/4.0.0.tar.gz
- extracting geerlingguy.apache to /vagrant/provisioning/roles/geerlingguy.apache
- geerlingguy.apache (4.0.0) was installed successfully
- downloading role 'mysql', owned by geerlingguy
- downloading role from https://github.com/geerlingguy/ansible-role-mysql/archive/4.3.4.tar.gz
- extracting geerlingguy.mysql to /vagrant/provisioning/roles/geerlingguy.mysql
- geerlingguy.mysql (4.3.4) was installed successfully
    server1: Running ansible-playbook...

PLAY [Setup Web Server] ********************************************************
skipping: no hosts matched

PLAY [Setup File Server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [server1]

TASK [ftp : Install vsftpd] ****************************************************
changed: [server1]

TASK [ftp : Configure vulnerable vsftpd version (CVE-2011-2523)] ***************
changed: [server1]

TASK [ftp : Restart vsftpd] ****************************************************
changed: [server1]

TASK [smb : Install Samba] *****************************************************
changed: [server1]

TASK [smb : Configure vulnerable Samba version (CVE-2017-7494)] ****************
changed: [server1]

TASK [smb : Restart Samba] *****************************************************
changed: [server1]

TASK [smtp-stop : Disable and stop Postfix service] ****************************
changed: [server1]

PLAY [Setup Telnet/SNMP Server] ************************************************
skipping: no hosts matched

PLAY [Enable UFW and setup Routing] ********************************************

TASK [Gathering Facts] *********************************************************
ok: [server1]

TASK [ufw : Install UFW] *******************************************************
changed: [server1]

TASK [ufw : Enable specified ports in UFW] *************************************
changed: [server1] => (item=22)
changed: [server1] => (item=21)
changed: [server1] => (item=445)
changed: [server1] => (item=137)

TASK [ufw : Enable UFW] ********************************************************
changed: [server1]

TASK [ufw : Ensure UFW is enabled on boot] *************************************
ok: [server1]

PLAY [Execute kali role] *******************************************************
skipping: no hosts matched

PLAY [Release and renew DHCP lease for eth1] ***********************************

TASK [Gathering Facts] *********************************************************
ok: [server1]

TASK [networking : Release DHCP lease on eth1] *********************************
changed: [server1]

TASK [networking : Renew DHCP lease on eth1] ***********************************
changed: [server1]

TASK [networking : Release DHCP lease on eth1 (again)] *************************
changed: [server1]

TASK [networking : Renew DHCP lease on eth1 (again)] ***************************
changed: [server1]

PLAY RECAP *********************************************************************
server1                    : ok=18   changed=14   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

==> server2: Importing base box 'generic/debian12'...
==> server2: Matching MAC address for NAT networking...
==> server2: Checking if box 'generic/debian12' version '4.3.12' is up to date...
==> server2: Setting the name of the VM: probe-lab-server2-20241020171654
==> server2: Fixed port collision for 22 => 2222. Now on port 2202.
==> server2: Clearing any previously set network interfaces...
==> server2: Preparing network interfaces based on configuration...
    server2: Adapter 1: nat
    server2: Adapter 2: bridged
==> server2: Forwarding ports...
    server2: 22 (guest) => 2202 (host) (adapter 1)
==> server2: Running 'pre-boot' VM customizations...
==> server2: Booting VM...
==> server2: Waiting for machine to boot. This may take a few minutes...
    server2: SSH address: 127.0.0.1:2202
    server2: SSH username: vagrant
    server2: SSH auth method: private key
    server2: Warning: Connection reset. Retrying...
    server2: Warning: Remote connection disconnect. Retrying...
    server2: 
    server2: Vagrant insecure key detected. Vagrant will automatically replace
    server2: this with a newly generated keypair for better security.
    server2: 
    server2: Inserting generated public key within guest...
    server2: Removing insecure key from the guest if it's present...
    server2: Key inserted! Disconnecting and reconnecting using new SSH key...
==> server2: Machine booted and ready!
==> server2: Checking for guest additions in VM...
==> server2: Setting hostname...
==> server2: Configuring and enabling network interfaces...
==> server2: Rsyncing folder: /home/kono/Desktop/xd/ => /vagrant
==> server2:   - Exclude: [".vagrant/", ".git/"]
==> server2: Running provisioner: ansible_local...
    server2: Installing Ansible...
    server2: Running ansible-galaxy...
Starting galaxy role install process
- downloading role 'apache', owned by geerlingguy
- downloading role from https://github.com/geerlingguy/ansible-role-apache/archive/4.0.0.tar.gz
- extracting geerlingguy.apache to /vagrant/provisioning/roles/geerlingguy.apache
- geerlingguy.apache (4.0.0) was installed successfully
- downloading role 'mysql', owned by geerlingguy
- downloading role from https://github.com/geerlingguy/ansible-role-mysql/archive/4.3.4.tar.gz
- extracting geerlingguy.mysql to /vagrant/provisioning/roles/geerlingguy.mysql
- geerlingguy.mysql (4.3.4) was installed successfully
    server2: Running ansible-playbook...

PLAY [Setup Web Server] ********************************************************
skipping: no hosts matched

PLAY [Setup File Server] *******************************************************
skipping: no hosts matched

PLAY [Setup Telnet/SNMP Server] ************************************************

TASK [Gathering Facts] *********************************************************
ok: [server2]

TASK [snmp : Install SNMP] *****************************************************
changed: [server2]

TASK [snmp : Configure SNMP with weak community strings and specific port (CVE-2017-6739)] ***
changed: [server2]

TASK [snmp : Restart snmpd] ****************************************************
changed: [server2]

PLAY [Enable UFW and setup Routing] ********************************************

TASK [Gathering Facts] *********************************************************
ok: [server2]

TASK [ufw : Install UFW] *******************************************************
changed: [server2]

TASK [ufw : Enable specified ports in UFW] *************************************
changed: [server2] => (item=161)
changed: [server2] => (item=25)
changed: [server2] => (item=22)

TASK [ufw : Enable UFW] ********************************************************
changed: [server2]

TASK [ufw : Ensure UFW is enabled on boot] *************************************
ok: [server2]

PLAY [Execute kali role] *******************************************************
skipping: no hosts matched

PLAY [Release and renew DHCP lease for eth1] ***********************************

TASK [Gathering Facts] *********************************************************
ok: [server2]

TASK [networking : Release DHCP lease on eth1] *********************************
changed: [server2]

TASK [networking : Renew DHCP lease on eth1] ***********************************
changed: [server2]

TASK [networking : Release DHCP lease on eth1 (again)] *************************
changed: [server2]

TASK [networking : Renew DHCP lease on eth1 (again)] ***************************
changed: [server2]

PLAY RECAP *********************************************************************
server2                    : ok=14   changed=10   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0